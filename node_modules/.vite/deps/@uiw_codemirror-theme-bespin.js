import {
  _extends
} from "./chunk-KBUAZBQ3.js";
import {
  EditorView,
  HighlightStyle,
  syntaxHighlighting,
  tags
} from "./chunk-45ZN64OM.js";
import "./chunk-DFKQJ226.js";

// node_modules/@uiw/codemirror-themes/esm/index.js
var createTheme = (_ref) => {
  var {
    theme,
    settings = {},
    styles = []
  } = _ref;
  var themeOptions = {
    ".cm-gutters": {}
  };
  var baseStyle = {};
  if (settings.background) {
    baseStyle.backgroundColor = settings.background;
  }
  if (settings.foreground) {
    baseStyle.color = settings.foreground;
  }
  if (settings.background || settings.foreground) {
    themeOptions["&"] = baseStyle;
  }
  if (settings.fontFamily) {
    themeOptions["&.cm-editor .cm-scroller"] = {
      fontFamily: settings.fontFamily
    };
  }
  if (settings.gutterBackground) {
    themeOptions[".cm-gutters"].backgroundColor = settings.gutterBackground;
  }
  if (settings.gutterForeground) {
    themeOptions[".cm-gutters"].color = settings.gutterForeground;
  }
  if (settings.gutterBorder) {
    themeOptions[".cm-gutters"].borderRightColor = settings.gutterBorder;
  }
  if (settings.caret) {
    themeOptions[".cm-content"] = {
      caretColor: settings.caret
    };
    themeOptions[".cm-cursor, .cm-dropCursor"] = {
      borderLeftColor: settings.caret
    };
  }
  var activeLineGutterStyle = {};
  if (settings.gutterActiveForeground) {
    activeLineGutterStyle.color = settings.gutterActiveForeground;
  }
  if (settings.lineHighlight) {
    themeOptions[".cm-activeLine"] = {
      backgroundColor: settings.lineHighlight
    };
    activeLineGutterStyle.backgroundColor = settings.lineHighlight;
  }
  themeOptions[".cm-activeLineGutter"] = activeLineGutterStyle;
  if (settings.selection) {
    themeOptions["&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
      backgroundColor: settings.selection
    };
  }
  if (settings.selectionMatch) {
    themeOptions["& .cm-selectionMatch"] = {
      backgroundColor: settings.selectionMatch
    };
  }
  var themeExtension = EditorView.theme(themeOptions, {
    dark: theme === "dark"
  });
  var highlightStyle = HighlightStyle.define(styles);
  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];
  return extension;
};

// node_modules/@uiw/codemirror-theme-bespin/esm/index.js
var defaultSettingsBespin = {
  background: "#28211c",
  foreground: "#9d9b97",
  caret: "#797977",
  selection: "#36312e",
  selectionMatch: "#4f382b",
  gutterBackground: "#28211c",
  gutterForeground: "#666666",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
};
var bespinInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBespin, settings),
    styles: [{
      tag: [tags.atom, tags.number, tags.link, tags.bool],
      color: "#9b859d"
    }, {
      tag: tags.comment,
      color: "#937121"
    }, {
      tag: [tags.keyword, tags.tagName],
      color: "#cf6a4c"
    }, {
      tag: tags.string,
      color: "#f9ee98"
    }, {
      tag: tags.bracket,
      color: "#9d9b97"
    }, {
      tag: [tags.variableName],
      color: "#5ea6ea"
    }, {
      tag: tags.definition(tags.variableName),
      color: "#cf7d34"
    }, {
      tag: [tags.function(tags.variableName), tags.className],
      color: "#cf7d34"
    }, {
      tag: [tags.propertyName, tags.attributeName],
      color: "#54be0d"
    }, ...styles]
  });
};
var bespin = bespinInit();
export {
  bespin,
  bespinInit,
  defaultSettingsBespin
};
//# sourceMappingURL=@uiw_codemirror-theme-bespin.js.map
